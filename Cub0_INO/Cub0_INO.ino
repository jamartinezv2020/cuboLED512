#include <SPI.h>

#define XAXIS 0
#define YAXIS 1
#define ZAXIS 2

#define POS_X 0
#define NEG_X 1
#define POS_Z 2
#define NEG_Z 3
#define POS_Y 4
#define NEG_Y 5

#define BUTTON_PIN_A 7
#define BUTTON_PIN_B 8
#define RED_LED 5
#define GREEN_LED 6

#define TOTAL_EFFECTS 8
#define RAIN 0
#define PLANE_BOING 1
#define SEND_VOXELS 2
#define WOOP_WOOP 3
#define CUBE_JUMP 4
#define GLOW 5
#define TEXT 6
#define LIT 7

#define RAIN_TIME 260
#define PLANE_BOING_TIME 220
#define SEND_VOXELS_TIME 140
#define WOOP_WOOP_TIME 350
#define CUBE_JUMP_TIME 200
#define GLOW_TIME 8
#define TEXT_TIME 300

uint8_t characters[10][8] = {
  {0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C}, //0
  {0x10, 0x18, 0x14, 0x10, 0x10, 0x10, 0x10, 0x3C}, //1
  {0x3C, 0x42, 0x40, 0x40, 0x3C, 0x02, 0x02, 0x7E}, //2
  {0x3C, 0x40, 0x40, 0x3C, 0x40, 0x40, 0x42, 0x3C}, //3
  {0x22, 0x22, 0x22, 0x22, 0x7E, 0x20, 0x20, 0x20}, //4
  {0x7E, 0x02, 0x02, 0x3E, 0x40, 0x40, 0x42, 0x3C}, //5
  {0x3C, 0x02, 0x02, 0x3E, 0x42, 0x42, 0x42, 0x3C}, //6
  {0x3C, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40}, //7
  {0x3C, 0x42, 0x42, 0x3C, 0x42, 0x42, 0x42, 0x3C}, //8
  {0x3C, 0x42, 0x42, 0x42, 0x3C, 0x40, 0x40, 0x3C}, //9
};

uint8_t number[10][8] = {
  {0x0E, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0E}, // 0 
  {0x04, 0x06, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0E}, // 1 
  {0x0E, 0x11, 0x10, 0x08, 0x04, 0x02, 0x01, 0x1F}, // 2 
  {0x0E, 0x11, 0x10, 0x0C, 0x10, 0x10, 0x11, 0x0E}, // 3 
  {0x08, 0x0C, 0x0A, 0x09, 0x1F, 0x08, 0x08, 0x08}, // 4 
  {0x1F, 0x01, 0x01, 0x0F, 0x10, 0x10, 0x11, 0x0E}, // 5 
  {0x0C, 0x02, 0x01, 0x0F, 0x11, 0x11, 0x11, 0x0E}, // 6 
  {0x1F, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 0x02}, // 7 
  {0x0E, 0x11, 0x11, 0x0E, 0x11, 0x11, 0x11, 0x0E}, // 8 
  {0x0E, 0x11, 0x11, 0x11, 0x1E, 0x10, 0x08, 0x06}, // 9 
};

uint8_t abc[26][8] = {
  {0x18, 0x18, 0x24, 0x24, 0x24, 0x7E, 0x42, 0x42}, // A 
  {0x1E, 0x22, 0x22, 0x1E, 0x22, 0x22, 0x22, 0x1E}, // B 
  {0x78, 0x04, 0x02, 0x02, 0x02, 0x02, 0x04, 0x78}, // C 
  {0x1E, 0x22, 0x42, 0x42, 0x42, 0x42, 0x22, 0x1E}, // D 
  {0x3E, 0x02, 0x02, 0x1E, 0x02, 0x02, 0x02, 0x3E}, // E 
  {0x3E, 0x02, 0x02, 0x3E, 0x02, 0x02, 0x02, 0x02}, // F 
  {0x78, 0x04, 0x02, 0x02, 0x72, 0x42, 0x44, 0x78}, // G 
  {0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x42}, // H 
  {0x1C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C}, // I 
  {0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x1C}, // J 
  {0x22, 0x12, 0x0A, 0x06, 0x06, 0x0A, 0x12, 0x22}, // K 
  {0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x3C}, // L 
  {0x63, 0x63, 0x55, 0x55, 0x49, 0x49, 0x41, 0x41}, // M 
  {0x46, 0x46, 0x4A, 0x4A, 0x52, 0x52, 0x62, 0x62}, // N 
  {0x1C, 0x22, 0x41, 0x41, 0x41, 0x41, 0x22, 0x1C}, // O 
  {0x1E, 0x22, 0x22, 0x22, 0x1E, 0x02, 0x02, 0x02}, // P 
  {0x1C, 0x22, 0x41, 0x41, 0x41, 0x41, 0x22, 0x1C}, // Q 
  {0x1E, 0x22, 0x22, 0x22, 0x1E, 0x12, 0x12, 0x12}, // R 
  {0x1C, 0x02, 0x02, 0x0C, 0x10, 0x10, 0x22, 0x1C}, // S 
  {0x1E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08}, // T 
  {0x3C, 0x20, 0x20, 0x20, 0x20, 0x20, 0x24, 0x18}, // U 
  {0x3C, 0x20, 0x20, 0x20, 0x20, 0x18, 0x18, 0x0C}, // V 
  {0x62, 0x62, 0x55, 0x55, 0x49, 0x49, 0x41, 0x41}, // W 
  {0x42, 0x42, 0x24, 0x24, 0x18, 0x18, 0x42, 0x42}, // X 
  {0x1C, 0x10, 0x10, 0x10, 0x08, 0x08, 0x04, 0x04}, // Y 
  {0x3E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x3E, 0x00}  // Z 
};

void setup() {
  pinMode(BUTTON_PIN_A, INPUT_PULLUP);
  pinMode(BUTTON_PIN_B, INPUT_PULLUP);
  pinMode(RED_LED, OUTPUT);
  pinMode(GREEN_LED, OUTPUT);
}

void loop() {
  if (digitalRead(BUTTON_PIN_A) == LOW) {
    runEffect(RAIN);
    delay(RAIN_TIME);
  }
  if (digitalRead(BUTTON_PIN_B) == LOW) {
    runEffect(PLANE_BOING);
    delay(PLANE_BOING_TIME);
  }
}

void runEffect(int effect) {
  switch (effect) {
    case RAIN:
      runRainEffect();
      break;
    case PLANE_BOING:
      runPlaneBoingEffect();
      break;
    case SEND_VOXELS:
      runSendVoxelsEffect();
      break;
    case WOOP_WOOP:
      runWoopWoopEffect();
      break;
    case CUBE_JUMP:
      runCubeJumpEffect();
      break;
    case GLOW:
      runGlowEffect();
      break;
    case TEXT:
      runTextEffect();
      break;
    case LIT:
      runLitEffect();
      break;
  }
}

void runRainEffect() {
  // Implementar la lógica del efecto de lluvia
}

void runPlaneBoingEffect() {
  // Implementar la lógica del efecto de rebote
}

void runSendVoxelsEffect() {
  // Implementar la lógica de enviar voxels
}

void runWoopWoopEffect() {
  // Implementar la lógica del efecto Woop Woop
}

void runCubeJumpEffect() {
  // Implementar la lógica del efecto de salto de cubo
}

void runGlowEffect() {
  // Implementar la lógica del efecto de brillo
}

void runTextEffect() {
  // Implementar la lógica del efecto de texto
}

void runLitEffect() {
  // Implementar la lógica del efecto lit
}

